#!/usr/bin/python3

# Script Name:                  malwareScan.py
# Author:                       Michael Sineiro
# Date of latest revision:      2/20/2024
# Purpose:                      malware scanner that recursively scans a specified directory,
#########                       generates MD5 hashes for each file, and prints details
#########                       

import hashlib
import os
import datetime

class MalwareScanner:
    def __init__(self, directoryPath):
        self.directoryPath = directoryPath

    def generateMd5Hash(self, filePath):
        """Generate MD5 hash of a file."""
        hashMd5 = hashlib.md5()
        with open(filePath, 'rb') as file:
            for chunk in iter(lambda: file.read(4096), b""):
                hashMd5.update(chunk)
        return hashMd5.hexdigest()

    def scanDirectory(self):
        """Recursively scan each file in directory and print details."""
        for root, dirs, files in os.walk(self.directoryPath):
            for file in files:
                try:
                    filePath = os.path.join(root, file)
                    md5Hash = self.generateMd5Hash(filePath)
                    fileStats = os.stat(filePath)
                    fileSize = fileStats.st_size
                    print(f"Timestamp: {datetime.datetime.now()}, File Name: {file}, File Size: {fileSize} bytes, MD5 Hash: {md5Hash}, Path: {os.path.abspath(filePath)}")
                except Exception as e:
                    print(f"Error processing file {file}: {e}")

if __name__ == "__main__":
    directoryPath = input("Enter the directory path to scan: ")
    scanner = MalwareScanner(directoryPath)
    scanner.scanDirectory()
